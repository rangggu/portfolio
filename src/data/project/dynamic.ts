import { ProjectType } from "../project"

export const DYNAMIC: ProjectType = {
  index: 2,
  title: "Dynamic Balance",
  subtitle: "인체 균형 능력 분석 서비스",
  summary: "인체 균형 능력측정 및 맞춤 솔루션을 제공하는 모바일 앱",
  background: "/images/project/balance.png",
  desc: [
    "UI/UX 전면 개편 및 신규 기능 도입으로 사용자 경험 개선",
    "PDF 결과지 출력 기능 추가로 재이용률 40% 증가",
    "데이터 차트 시각화를 통해 직관적인 결과 제공",
  ],
  date: "@2023. 09 ~ 2024. 12",
  tag: "직장",
  contribution: 40,
  overview: {
    problem: [
      "사용자가 오프라인에서 결과를 활용하기 어려워요 😩",
      "UI가 아동 중심으로 설계돼서 성인 사용자에게는 적합하지 않은 부분이 있어요 😕",
    ],
    solution: [
      "PDF 출력 기능으로 사용자가 결과지를 바로 받아볼 수 있어요!",
      "연령별 맞춤 UI를 제공해 성인 사용자도 편리하게 이용할 수 있도록 개선했어요.",
    ],
  },
  preview: {
    type: "image",
    link: [""],
  },
  skill: [
    { name: "React Native", src: "/images/icon/react.png" },
    { name: "TypeScript", src: "/images/icon/ts.png" },
    { name: "Recoil", src: "/images/icon/recoil.png" },
    { name: "Styled Components", src: "/images/icon/styled-components.png" },
    { name: "nativewind", src: "/images/icon/tailwind.png" },
    { name: "Figma", src: "/images/icon/figma.png" },
    { name: "Node.js", src: "/images/icon/node.png" },
  ],
  result: [
    {
      title: "프로세스 최적화 및 UX 개선",
      desc: [
        `이름·나이·성별·키 등 필수 입력정보만 남겨, 측정 준비 시간을 기존 10초 → <strong class="font-semibold text-yellow500">5초</strong> 수준으로 절감`,
        `측정 완료 후 결과 확인·출력 과정을 <strong class="font-semibold text-yellow500">간소화</strong>`,
        `측정 장치와 <strong class="font-semibold text-yellow500">자동 연결</strong>되도록 설계해 재연결 프로세스 없이 안정적으로 측정을 지원`,
      ],
    },
    {
      title: "사용자 요청사항 반영 및 기능 확장",
      desc: [
        `성인 모드 중심이던 서비스에 <strong class="font-semibold text-yellow500">‘아동 모드’</strong>와 <strong class="font-semibold text-yellow500">‘가로 모드’</strong>를 추가하여 다양한 사용자층 및 디바이스 환경에 대응`,
        `설문결과를 반영해 <strong class="font-semibold text-yellow500">PDF 출력</strong> 기능을 도입`,
        `주기적인 고객사 미팅을 통해 신규 요청사항을 빠르게 파악하고 업데이트 주기 단축`,
      ],
    },
    {
      title: "측정 및 데이터 시각화",
      desc: [
        `<strong class="font-semibold text-yellow500">다양한 차트</strong> 유형(막대, 꺾은선, 레이더, 표 등)을 제공해 측정 결과 이해도를 높임`,
        `컨퍼런스에서 실시간 측정·시각화를 <strong class="font-semibold text-yellow500">시연</strong>하여 신규 가입을 유도하고, 서비스 홍보 효과 극대화`,
      ],
    },
    {
      title: "장애 해결 및 운영 안정화",
      desc: [
        `연결 오류 발생 시, 원인을 자동 진단·재탐색하는 로직을 구현해 간편한 에러 핸들링을 지원`,
      ],
    },
  ],
  function: [
    {
      name: "프로세스 최적화",
      icon: "⚙️",
      info: [
        {
          title: "사용자 정보 입력 단계 간소화",
          desc: `기존에는 아이디, 나이, 성별, 키 등 여러 항목 입력으로 10초 이상 소요됐습니다. 
          필수 정보만 요구하는 '빠른 입력 모드'를 추가하고, 이전 입력값을 로컬 스토리지에 저장해 
          재방문 시 최소 수정만으로 완료되도록 개선했습니다.`,
        },
        {
          title: "측정 후 결과 확인 및 출력 과정 간소화",
          desc: `측정 결과를 바로 PDF로 출력하고 싶다는 요구에 맞춰, 결과 화면에서 
          PDF를 자동 생성·다운로드할 수 있게 구현했습니다. 
          한 번의 클릭으로 결과지를 얻을 수 있어 전체 프로세스가 한층 간단해졌습니다.`,
        },
      ],
    },
    {
      name: "UI/UX 개선",
      icon: "🎨",
      info: [
        {
          title: "연령별 모드 추가",
          desc: `성인 모드만 있던 기존 구조를 재설계해, 아동 모드와 성인 모드를 분리했습니다. 
          아동 모드는 큰 아이콘과 친근한 색감을 사용하고, 성인 모드는 정보를 직관적으로 
          파악할 수 있도록 UI를 구성했습니다.`,
        },
        {
          title: "가로모드 지원",
          desc: `세로형 키오스크에 특화된 레이아웃에서 벗어나, 가로형 디바이스도 
          자동 감지·전환하도록 수정했습니다. 텍스트와 그래프가 어색하지 않도록 
          레이아웃을 전면 검토해 다양한 환경에서도 일관성 있는 UX를 제공했습니다.`,
        },
      ],
    },
    {
      name: "데이터 관리 및 시각화",
      icon: "📊",
      info: [
        {
          title: "다양한 차트 시각화",
          desc: `막대·꺾은선·레이더·표 등 여러 차트 유형을 도입해, 
          측정 데이터를 한눈에 비교할 수 있도록 했습니다.`,
        },
        {
          title: "Backend API 개발",
          desc: `Node.js를 활용해 직접 API를 구현, 과거 데이터 조회·관리 기능을 추가했습니다. 
          특정 조건으로 데이터를 필터링·가공해 차트에 반영할 수 있도록 설계했습니다.`,
        },
      ],
    },
    {
      name: "이슈 해결 및 유지보수",
      icon: "🛠️",
      info: [
        {
          title: "블루투스 모듈 변경으로 인한 연결 문제",
          desc: `새 모듈과 기존 앱의 호환성 문제로, 일부 기기에서 연결 스캔이 실패했습니다. 
          OS 권한 설정 누락이 원인이었으며, 연결 실패 시 권한 요청 과정을 명확히 안내하고 
          자동 재탐색 로직을 추가해 안정성을 확보했습니다.`,
        },
      ],
    },
    {
      name: "사용자 유입 및 확대",
      icon: "📢",
      info: [
        {
          title: "컨퍼런스 시연",
          desc: `컨퍼런스 현장에서 회원가입·실시간 측정 과정을 시연해 방문객들의 관심을 높이고,
          이어 PDF 출력 기능을 보여주어 오프라인 활용성을 어필했습니다.`,
        },
      ],
    },
  ],
  meaning: [
    `이번 프로젝트는 제가 처음으로 React-Native를 사용해 진행한 프로젝트라는 
      점에서 매우 의미가 깊습니다. React와 비슷한 점이 많아 비교적 익숙한 
      환경에서 시작할 수 있었고, 비교적 빠르게 적응하여 유지보수와 기능 개발을 
      성공적으로 수행할 수 있었습니다. 기초적인 컴포넌트 구조부터 네비게이션 
      방식까지 접해보면서 모바일 애플리케이션 전반에 대한 시야를 
      확장할 수 있었던 계기였다고 생각합니다.`,
    `그리고 이번 프로젝트를 통해 처음으로 백엔드 API 개발에 새롭게 도전해볼 
      수 있었습니다. Node.js를 활용해 백엔드 API를 작성하면서 
      처음에는 낯설고 어려운 부분이 많았지만, JavaScript의 친숙함 덕분에 빠르게 
      적응할 수 있었고, 이 과정에서 서버와 클라이언트의 상호작용을 깊이 이해할 
      수 있었다고 생각합니다. 예를 들어 차트 시각화를 위해 필터링된 데이터를 
      반환해야 하는 경우, 쿼리 파라미터 설계나 
      응답 형식을 어떻게 정리해야 할지 직접 고민하고 테스트하며 서비스 전체의 
      흐름을 파악하는 안목을 키울 수 있었습니다.`,
    `사용자의 불만을 해결하고 유지보수하는 과정도 굉장히 흥미로웠습니다. 사용자 
    정보 입력 단계가 너무 길어서 측정 준비에만 10초 이상 걸린다는 불만을 
    접했을 때, 단순히 입력 필드 몇 개를 줄이는 것뿐만 아니라 '어떻게 하면 이미 
    입력된 정보를 재활용할 수 있을까'를 고민했습니다. 그래서 로컬 스토리지를 
    이용해 이전 입력값을 자동 완성했고, 사용자 데이터로 저장된 값들도 입력 행동 
    없이 자동으로 표시되도록 로직을 설계했습니다. 이 과정을 통해, 사용자 입장에서 
    가장 귀찮아하는 포인트가 무엇인지 면밀히 파악하고, 정말 필요한 정보만 받는 
    것이 UX 향상에 얼마나 중요한지 배웠습니다.`,
    `또 한 번 크게 부딪힌 문제는 블루투스 모듈 변경으로 인해 일부 기기에서 
    연결이 아예 안 되는 현상이었습니다. 처음에는 장치나 펌웨어 문제라고 
    생각했지만, 계속해서 로그를 검토해 보면서 결국 OS 권한 이슈가 누락돼 재탐색이 
    제대로 작동하지 않는 케이스가 있음을 알아낼 수 있었습니다. 이를 해결하기 위해 
    권한 요청 메시지를 명확히 띄우고, 연결 실패 시 즉시 재탐색하는 방법을 
    적용했더니 안정성이 눈에 띄게 좋아졌습니다. 이처럼 문제의 근본 원인을 추적하는 
    과정이 정말 힘들면서도 보람 있었고, 프론트엔드 개발자로서 시스템 전반의 
    흐름까지 고려해야 한다는 점을 다시금 실감했습니다.`,
  ],
}
